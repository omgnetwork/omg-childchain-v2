{
  "contractName": "FallbackFunctionFailAttacker",
  "abi": [
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/node/plasma-contracts/plasma_framework/contracts/mocks/attackers/FallbackFunctionFailAttacker.sol\":\"FallbackFunctionFailAttacker\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/node/plasma-contracts/plasma_framework/contracts/mocks/attackers/FallbackFunctionFailAttacker.sol\":{\"keccak256\":\"0xfec9d6ed48b5a9d0ce7dda2a28bb3c69f76277cbfd63df9344f0451f2a2ef533\",\"urls\":[\"bzz-raw://f81d85bc4c8c96846e98699b372cfff28c7b0cbaf6ddf34ca0f97df4555bf311\",\"dweb:/ipfs/QmacDhm6ArnaBibYNvDNMF5hHxRx1W37nDgUaTMPLFqVW8\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b5060b78061001e6000396000f3fe6080604081905262461bcd60e51b9052601760846057565b60405180910390fd5b6000602b601983606b565b7f6661696c206f6e2066616c6c6261636b2066756e6374696f6e00000000000000815260200192915050565b602080825281016065816020565b92915050565b9081526020019056fea365627a7a72315820a17f300827aa93a605502499d4e88c10f5bb5cfeff8ebe97c0b64de16f8c472f6c6578706572696d656e74616cf564736f6c634300050b0040",
  "deployedBytecode": "0x6080604081905262461bcd60e51b9052601760846057565b60405180910390fd5b6000602b601983606b565b7f6661696c206f6e2066616c6c6261636b2066756e6374696f6e00000000000000815260200192915050565b602080825281016065816020565b92915050565b9081526020019056fea365627a7a72315820a17f300827aa93a605502499d4e88c10f5bb5cfeff8ebe97c0b64de16f8c472f6c6578706572696d656e74616cf564736f6c634300050b0040",
  "sourceMap": "59:127:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;59:127:3;;;;;;;",
  "deployedSourceMap": "59:127:3:-;;;;;-1:-1:-1;;;142:35:3;;;;;;;;;;;;;;6:364:-1;;166:67;230:2;225:3;166:67;;;266:66;246:87;;361:2;352:12;;152:218;-1:-1;;152:218;378:407;569:2;583:47;;;554:18;;644:131;554:18;644:131;;;636:139;540:245;-1:-1;;540:245;793:163;896:19;;;945:4;936:14;;889:67",
  "source": "pragma solidity 0.5.11;\npragma experimental ABIEncoderV2;\n\ncontract FallbackFunctionFailAttacker {\n    function () external payable {\n        revert(\"fail on fallback function\");\n    }\n}\n",
  "sourcePath": "/home/node/plasma-contracts/plasma_framework/contracts/mocks/attackers/FallbackFunctionFailAttacker.sol",
  "ast": {
    "absolutePath": "/home/node/plasma-contracts/plasma_framework/contracts/mocks/attackers/FallbackFunctionFailAttacker.sol",
    "exportedSymbols": {
      "FallbackFunctionFailAttacker": [
        130
      ]
    },
    "id": 131,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 120,
        "literals": [
          "solidity",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "id": 121,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:3"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 130,
        "linearizedBaseContracts": [
          130
        ],
        "name": "FallbackFunctionFailAttacker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "132:52:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "6661696c206f6e2066616c6c6261636b2066756e6374696f6e",
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "149:27:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f655a558c274bab27de9c35eaf5ef618134ef726b2dd62426b8fecb42df494cb",
                          "typeString": "literal_string \"fail on fallback function\""
                        },
                        "value": "fail on fallback function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f655a558c274bab27de9c35eaf5ef618134ef726b2dd62426b8fecb42df494cb",
                          "typeString": "literal_string \"fail on fallback function\""
                        }
                      ],
                      "id": 124,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17454,
                        17455
                      ],
                      "referencedDeclaration": 17455,
                      "src": "142:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "142:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "142:35:3"
                }
              ]
            },
            "documentation": null,
            "id": 129,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "112:2:3"
            },
            "returnParameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "132:0:3"
            },
            "scope": 130,
            "src": "103:81:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 131,
        "src": "59:127:3"
      }
    ],
    "src": "0:187:3"
  },
  "legacyAST": {
    "absolutePath": "/home/node/plasma-contracts/plasma_framework/contracts/mocks/attackers/FallbackFunctionFailAttacker.sol",
    "exportedSymbols": {
      "FallbackFunctionFailAttacker": [
        130
      ]
    },
    "id": 131,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 120,
        "literals": [
          "solidity",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "id": 121,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:3"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 130,
        "linearizedBaseContracts": [
          130
        ],
        "name": "FallbackFunctionFailAttacker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "132:52:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "6661696c206f6e2066616c6c6261636b2066756e6374696f6e",
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "149:27:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f655a558c274bab27de9c35eaf5ef618134ef726b2dd62426b8fecb42df494cb",
                          "typeString": "literal_string \"fail on fallback function\""
                        },
                        "value": "fail on fallback function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f655a558c274bab27de9c35eaf5ef618134ef726b2dd62426b8fecb42df494cb",
                          "typeString": "literal_string \"fail on fallback function\""
                        }
                      ],
                      "id": 124,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17454,
                        17455
                      ],
                      "referencedDeclaration": 17455,
                      "src": "142:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "142:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "142:35:3"
                }
              ]
            },
            "documentation": null,
            "id": 129,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "112:2:3"
            },
            "returnParameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "132:0:3"
            },
            "scope": 130,
            "src": "103:81:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 131,
        "src": "59:127:3"
      }
    ],
    "src": "0:187:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2020-04-07T14:07:49.422Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}